/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import {useRef, useEffect} from "react";

export default function IslandModel(props) {

        const myGroup = useRef();
        useEffect(() => {
                if (myGroup.current) {
                        myGroup.current.rotation.y = 4;
                }
        }, []);

        const { nodes, materials } = useGLTF("/scene.gltf");
        return (
        <group {...props} dispose={null} ref={myGroup}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Sphere.geometry}
                material={nodes.Sphere.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Box.geometry}
                material={nodes.Box.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Polyhedron_4.geometry}
                material={nodes.Polyhedron_4.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Polyhedron_3.geometry}
                material={nodes.Polyhedron_3.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Polyhedron_2.geometry}
                material={nodes.Polyhedron_2.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Polyhedron_1.geometry}
                material={nodes.Polyhedron_1.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Polyhedron.geometry}
                material={nodes.Polyhedron.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Torus.geometry}
                material={nodes.Torus.material}
                position={[0, -1.05, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane.geometry}
                material={nodes.Plane.material}
                position={[0, 0.15, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_1.geometry}
                material={nodes.Plane_1.material}
            />
        </group>
        );
}

useGLTF.preload("/scene.gltf");
